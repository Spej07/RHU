/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package admin;

import config.dbConnect;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import static javax.management.remote.JMXConnectorFactory.connect;
import static javax.rmi.PortableRemoteObject.connect;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author clair
 */
public class AddF extends javax.swing.JFrame {

    /**
     * Creates new form AddF
     */
    public AddF() {
        initComponents();
        
    }

    
     
    private void loadAppointments() {
    try {
        dbConnect dbc = new dbConnect();
        String sql = "SELECT a_id, p_id, appointment_date, appointment_time, appointment_type, status FROM tbl_appointment";

        ResultSet rs = dbc.selectData(sql);
        javax.swing.table.DefaultTableModel model = new javax.swing.table.DefaultTableModel(
            new String[] { "Appointment ID", "Patient ID", "Date", "Time", "Type", "Status" }, 0);

        while (rs.next()) {
            Object[] row = new Object[6];
            row[0] = rs.getInt("a_id");
            row[1] = rs.getInt("p_id");
            row[2] = rs.getString("appointment_date");
            row[3] = rs.getString("appointment_time");
            row[4] = rs.getString("appointment_type");
            row[5] = rs.getString("status");
            model.addRow(row);
        }

 
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(null, "Failed to load appointments");
    }
}

    
    private String appointmentId; // store internally, no need to show in UI


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        update = new javax.swing.JButton();
        add = new javax.swing.JButton();
        AID = new javax.swing.JTextField();
        d = new javax.swing.JTextField();
        t = new javax.swing.JTextField();
        tp = new javax.swing.JTextField();
        st = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        PID = new javax.swing.JTextField();
        log = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(235, 230, 240));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        update.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        update.setForeground(new java.awt.Color(102, 102, 102));
        update.setText("UPDATE");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });
        jPanel1.add(update, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 20, 90, -1));

        add.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        add.setForeground(new java.awt.Color(102, 102, 102));
        add.setText("ADD");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });
        jPanel1.add(add, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 20, 80, -1));

        AID.setBackground(new java.awt.Color(235, 230, 240));
        AID.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        AID.setForeground(new java.awt.Color(102, 102, 102));
        AID.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        AID.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "APPOINTMENT ID", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 1, 12), new java.awt.Color(102, 102, 102))); // NOI18N
        AID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AIDActionPerformed(evt);
            }
        });
        jPanel1.add(AID, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 240, -1));

        d.setBackground(new java.awt.Color(235, 230, 240));
        d.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        d.setForeground(new java.awt.Color(102, 102, 102));
        d.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        d.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "DATE", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 1, 12), new java.awt.Color(102, 102, 102))); // NOI18N
        d.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dActionPerformed(evt);
            }
        });
        jPanel1.add(d, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 240, 40));

        t.setBackground(new java.awt.Color(235, 230, 240));
        t.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        t.setForeground(new java.awt.Color(102, 102, 102));
        t.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        t.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "TIME", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 1, 12), new java.awt.Color(102, 102, 102))); // NOI18N
        t.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tActionPerformed(evt);
            }
        });
        jPanel1.add(t, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 240, 40));

        tp.setBackground(new java.awt.Color(235, 230, 240));
        tp.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        tp.setForeground(new java.awt.Color(102, 102, 102));
        tp.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        tp.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "TYPE", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 1, 12), new java.awt.Color(102, 102, 102))); // NOI18N
        tp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tpActionPerformed(evt);
            }
        });
        jPanel1.add(tp, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, 240, 40));

        st.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        st.setForeground(new java.awt.Color(102, 102, 102));
        st.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Scheduled", "Completed", "Cancelled", "Rescheduled" }));
        st.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stActionPerformed(evt);
            }
        });
        jPanel1.add(st, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 280, 240, 30));

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 102));
        jLabel1.setText("STATUS");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 260, -1, -1));

        PID.setBackground(new java.awt.Color(235, 230, 240));
        PID.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        PID.setForeground(new java.awt.Color(102, 102, 102));
        PID.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        PID.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "PATIENT ID", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 1, 12), new java.awt.Color(102, 102, 102))); // NOI18N
        PID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PIDActionPerformed(evt);
            }
        });
        jPanel1.add(PID, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 240, -1));

        log.setBackground(new java.awt.Color(230, 189, 230));
        log.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        log.setForeground(new java.awt.Color(102, 102, 102));
        log.setText("CANCEL");
        log.setToolTipText("");
        log.setBorder(null);
        log.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logActionPerformed(evt);
            }
        });
        jPanel1.add(log, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 90, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void logActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logActionPerformed
        Appointment  a = new Appointment();
        a.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_logActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
  
     String appointmentId = AID.getText();
    String patientId = PID.getText();
    String date = d.getText();
    String time = t.getText().trim(); 
    String type = tp.getText();
    String status = st.getSelectedItem().toString();

    if (patientId.isEmpty() || date.isEmpty() || time.isEmpty() || type.isEmpty()) {
        JOptionPane.showMessageDialog(null, "All fields are required.");
        return;
    }

  
    if (time.matches("^([01]?\\d|2[0-3]):[0-5]\\d$")) {
        time += ":00"; 
    } else if (!time.matches("^([01]?\\d|2[0-3]):[0-5]\\d:[0-5]\\d$")) {
        JOptionPane.showMessageDialog(null, "Invalid time format. Use HH:mm or HH:mm:ss.");
        return;
    }

    try {
        dbConnect dbc = new dbConnect();
    
        String sql = "UPDATE tbl_appointment SET appointment_date=?, appointment_time=?, appointment_type=? , status = ? WHERE a_id=?";


        java.sql.PreparedStatement pstmt = dbc.getConnection().prepareStatement(sql);
        pstmt.setString(1, date);
        pstmt.setString(2, time);
        pstmt.setString(3, type);
        pstmt.setString(4, status);
        pstmt.setString(5, appointmentId); 

        int affectedRows = pstmt.executeUpdate();

        if (affectedRows > 0) {
            JOptionPane.showMessageDialog(null, "Appointment updated!");
            add.setEnabled(true);
            update.setEnabled(false);
            AID.setEnabled(false);
            PID.setEnabled(false); 

        } else {
            JOptionPane.showMessageDialog(null, "Failed to update appointment.");
        }

        pstmt.close();

    } catch (java.sql.SQLException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(null, "Database Error: " + e.getMessage());
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(null, "General Error: " + e.getMessage());
    }
    }//GEN-LAST:event_updateActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed

    String patientId = PID.getText();
    String date = d.getText();
    String time = t.getText().trim();
    String type = tp.getText();
    String status = st.getSelectedItem().toString();

    if (patientId.isEmpty() || date.isEmpty() || time.isEmpty() || type.isEmpty()) {
        JOptionPane.showMessageDialog(null, "All fields are required.");
        return;
    }

    // Validate and format time
    if (time.matches("^([01]?\\d|2[0-3]):[0-5]\\d$")) {
        time += ":00";
    } else if (!time.matches("^([01]?\\d|2[0-3]):[0-5]\\d:[0-5]\\d$")) {
        JOptionPane.showMessageDialog(null, "Invalid time format. Use HH:mm or HH:mm:ss.");
        return;
    }

  try {
    dbConnect dbc = new dbConnect();
    String sql = "INSERT INTO tbl_appointment (p_id, appointment_date, appointment_time, appointment_type, status) VALUES (?, ?, ?, ?, ?)";
    java.sql.PreparedStatement pstmt = dbc.getConnection().prepareStatement(sql);

    pstmt.setString(1, patientId);
    pstmt.setString(2, date);
    pstmt.setString(3, time);
    pstmt.setString(4, type);
    pstmt.setString(5, status);

    int affectedRows = pstmt.executeUpdate();

    if (affectedRows > 0) {
        JOptionPane.showMessageDialog(null, "Appointment added!");
    } else {
        JOptionPane.showMessageDialog(null, "Failed to add appointment.");
    }

    pstmt.close();

} catch (Exception e) {
    e.printStackTrace();
    JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
}

    }//GEN-LAST:event_addActionPerformed

    private void tActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tActionPerformed

    private void stActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stActionPerformed

    private void dActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dActionPerformed

    private void AIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AIDActionPerformed

    private void tpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tpActionPerformed

    private void PIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PIDActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddF().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextField AID;
    public javax.swing.JTextField PID;
    public javax.swing.JButton add;
    public javax.swing.JTextField d;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton log;
    public javax.swing.JComboBox<String> st;
    public javax.swing.JTextField t;
    public javax.swing.JTextField tp;
    public javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables

    
     
}
